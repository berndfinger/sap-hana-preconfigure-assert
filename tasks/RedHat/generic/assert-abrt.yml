---

- debug:
    msg: "imported RedHat/generic/assert-abrt.yml"

- debug:
    var: ansible_facts.packages['abrt']
  
#- name: Check abrt
#  block:
#    - name: Assert that abrt is disabled
#      assert:
#        that:
#          - "'stopped' in ansible_facts.packages['abrt']"
#
#  when: "'abrt' in ansible_facts.packages"
#

- debug:
    var: abrt_status

- name: Disable abrtd if installed, and get status of abrtd
  block:
    - name: Get status of abrt
      command: systemctl status abrt
      register: abrt_status
      ignore_errors: yes
      changed_when: no

    - name: Assert that abrtd is disabled
      assert:
    	that:
    	  - "'/usr/lib/systemd/system/abrtd.service; disabled' in kdump_status.stdout"
    	fail_msg: "FAIL: Service 'kdump' is not disabled!"
    	success_msg: "PASS: Service 'kdump' is disabled."
      ignore_errors: "{{ sap_preconfigure_assert_ignore_errors|d(false) }}"
    
    - name: Assert that abrtd is inactive
      assert:
    	that:
    	  - "'inactive (dead)' in kdump_status.stdout"
    	fail_msg: "FAIL: Service 'kdump' is active!"
        success_msg: "PASS: Service 'kdump' is inactive."
      ignore_errors: "{{ sap_preconfigure_assert_ignore_errors|d(false) }}"

  when: "'abrt' in ansible_facts.packages"

...
